% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvTargetOpt.R
\name{opt.onestep}
\alias{opt.onestep}
\title{opt.onestep}
\usage{
opt.onestep(
  dat,
  tgmean,
  tgerr = NULL,
  xeps = 0.001,
  pcnr,
  maxarea = NULL,
  ptchoice = 1,
  useweights = TRUE,
  mknormweights = F,
  allpts = F,
  gr2retlimit = TRUE,
  bpcenter = F,
  mindeg = 0,
  wfun = function(x) {     (1/x)^2 },
  sequential = F,
  ptchng = F,
  nptc = 0,
  tgpcawg = 1,
  betterweights = F,
  yweights = F,
  datlim = NULL,
  knearest = NULL,
  tgdim = 1,
  ylast = NULL,
  sto = T,
  ...
)
}
\arguments{
\item{dat}{data.frame, data set}

\item{tgmean}{numerig vector, target mean}

\item{tgerr}{NULL or numeric vector, maximally accepted deviation from target value}

\item{xeps}{numeric, smallest delta}

\item{pcnr}{integer vector,  numbers the principal components that shall be considered}

\item{maxarea}{matrix or NULL, maximal area that can/should be explored}

\item{ptchoice}{integer}

\item{useweights}{boolean}

\item{mknormweights}{boolean}

\item{allpts}{boolean}

\item{gr2retlimit}{boolean}

\item{bpcenter}{boolean}

\item{mindeg}{integer, minimal degree for polynomial mdel}

\item{wfun}{function, weight function}

\item{sequential}{boolean}

\item{ptchng}{boolean}

\item{nptc}{integer}

\item{tgpcawg}{numeric}

\item{betterweights}{boolean}

\item{yweights}{boolean}

\item{datlim}{integer or NULL}

\item{knearest}{integer, if specified only the \code{knearest} nearest observations to the target value are considered}

\item{tgdim}{integer}

\item{ylast}{integer, if a positive integer is defined, observations from the last \code{ylast} iterations are used only}

\item{sto}{boolean}

\item{...}{}
}
\value{
matrix with recommended points (process parameters for future measurements) in each line
}
\description{
Performs one iteration of the implemented optimization procedure.
Suggest points for future measurements in order to find a solution that reaches the desired target value.
One or more suggested points are returned.
}
\examples{
library(mvTargetOpt)
# Let there be the following true model tfoo:
tfoo <- function(x) {
  x1 <- x[,1]
  x2 <- x[,2]
  return( data.frame(y1=0.8*x1 - 1.2*x2,
                     y2=0.8*x1 - 1.2*abs(x2)^0.25) )
}
# assume we have measurements dat taken at startx:
startx <- expand.grid(x1=c(0,6,7,8,9,10,11,12),x2=c(-1,3,4,5,6,7))
dat <- cbind(startx,tfoo(startx))
# assume we want to find process parameters close to tgmean
tgmean <- tfoo(cbind(0.35,0.4))
# make a guess for a solution based on the specified parameters:
opt.onestep(dat, tgmean=tgmean,tgerr=c(0.2,0.2), pcnr=1:2)
}
