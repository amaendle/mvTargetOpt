% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvTargetOpt.R, R/mvTargetOptbeforemessingsto.R
\name{pred.solution}
\alias{pred.solution}
\title{PLSolve.1step prediction / suggestion for new measurements}
\usage{
pred.solution(dat, tgmean, tgerr = NULL, xeps = 0.001, pcnr,
  additive = FALSE, maxarea = NULL, ptchoice = 1,
  useweights = TRUE, mknormweights = F, allpts = F,
  gr2retlimit = TRUE, bpcenter = F, mindeg = 0, wfun = function(x)
  {     (1/x)^2 }, sequential = F, ptchng = F, nptc = 0,
  tgpcawg = 1, betterweights = F, yweights = F, datlim = NULL,
  knearest = NULL, tgdim = 1, ylast = NULL, sto = T, ...)

pred.solution(dat, tgmean, tgerr = NULL, xeps = 0.001, pcnr,
  additive = FALSE, maxarea = NULL, ptchoice = 1,
  useweights = TRUE, mknormweights = F, allpts = F,
  gr2retlimit = TRUE, bpcenter = F, mindeg = 0, wfun = function(x)
  {     (1/x)^2 }, sequential = F, ptchng = F, nptc = 0,
  tgpcawg = 1, betterweights = F, yweights = F, datlim = NULL,
  knearest = NULL, tgdim = 1, ylast = NULL, sto = T, ...)
}
\arguments{
\item{dat}{data set}

\item{tgmean}{target mean}

\item{tgerr}{maximal target error - should be optional}

\item{xeps}{smallest delta}

\item{pcnr}{principal components considered}

\item{additive}{dont use this}

\item{pplot}{do you want to plot?}

\item{dat}{data set}

\item{tgmean}{target mean}

\item{tgerr}{maximal target error - should be optional}

\item{xeps}{smallest delta}

\item{pplot}{do you want to plot?}

\item{pcnr}{principal components considered}

\item{additive}{dont use this}
}
\value{
matrix with recommended points (process parameters for future measurements) in each line

matrix with recommended points (process parameters for future measurements) in each line
}
\description{
try to solve equation sytem iteratively using PLS regression.

try to solve equation sytem iteratively using PLS regression.
}
\details{
PLSolve.1step returns points for new measurement/evaluation of the model equation

PLSolve.auto iterative algorithm which tries to autoatically solve the equation. For this it is necessary to specify the true model

Suggest points for future measurements in order to find a solution that reaches the desired target value iteratively

Eventuell weiter aufspilitten: Varianzabbruch und Delta-Kriterium

PLSolve.1step returns points for new measurement/evaluation of the model equation

PLSolve.auto iterative algorithm which tries to autoatically solve the equation. For this it is necessary to specify the true model

Suggest points for future measurements in order to find a solution that reaches the desired target value iteratively

Eventuell weiter aufspilitten: Varianzabbruch und Delta-Kriterium
}
\examples{
# Let there be the following true model tfoo:
tfoo <- function(x) {
  x1 <- x[,1]
  x2 <- x[,2]
  return( data.frame(y1=0.8*x1 - 1.2*x2,
                     y2=0.8*x1 - 1.2*abs(x2)^0.25) )
}
# assume we have measurements dat taken at startx:
startx <- expand.grid(x1=c(0,6,7,8,9,10,11,12),x2=c(-1,3,4,5,6,7))
dat <- cbind(startx,tfoo(startx))
# assume we want to find process parameters close to tgmean
tgmean <- tfoo(cbind(0.35,0.4))
# make a guess for a solution based on the specified parameters:
pred.solution(dat, tgmean=tgmean, pcnr=1:2)
# the same, but adding the error interval, and enable variance control
pred.solution(dat, tgmean=tgmean,tgerr=c(0.2,0.2), pcnr=1:2)
# Let there be the following true model tfoo:
tfoo <- function(x) {
  x1 <- x[,1]
  x2 <- x[,2]
  return( data.frame(y1=0.8*x1 - 1.2*x2,
                     y2=0.8*x1 - 1.2*abs(x2)^0.25) )
}
# assume we have measurements dat taken at startx:
startx <- expand.grid(x1=c(0,6,7,8,9,10,11,12),x2=c(-1,3,4,5,6,7))
dat <- cbind(startx,tfoo(startx))
# assume we want to find process parameters close to tgmean
tgmean <- tfoo(cbind(0.35,0.4))
# make a guess for a solution based on the specified parameters:
pred.solution(dat, tgmean=tgmean, pcnr=1:2)
# the same, but adding the error interval, and enable variance control
pred.solution(dat, tgmean=tgmean,tgerr=c(0.2,0.2), pcnr=1:2)
}
